from pyspark import SparkConf, SparkContext
from pyspark.sql import SQLContext, Row
from pyspark.sql.types import *
from datetime import datetime
from pyspark.sql.functions import col, udf

import time
start = time.time()


conf = SparkConf().setMaster("local").setAppName("Query1").set("spark.executor.cores", "4").set("spark.executor.memory","4G").set("spark.driver.memory","4G").set("spark.driver-cores","4")


#CLUSTER EXCUTION WITH MORE SETTINGS
#conf = SparkConf().setMaster("spark://192.167.155.71:7077").setAppName("Query1").set("spark.executor.cores", "2").set("spark.executor.instances", "4").set("spark.executor.memory","2G").set("spark.driver.memory","4G")


# LOCAL EXECUTION WITH MORE SPARK OPTION
#conf = SparkConf().setMaster("local").setAppName("Query1").set("spark.executor.cores", "4").set("spark.executor.memory","4G").set("spark.driver.memory","8G").set("spark.driver-cores","4").set("spark.num_executors","8").set("spark.sql.codegen","true").set("spark.sql.inMemoryColumnarStorage.com","true").set("spark.sql.inMemoryColumnarStorageBatch","10000").set("spark.sql.parquet.compression.codec","snappy").set("spark.executor.extraJavaOptions","-XX:MaxPermSize=1G").set("spark.driver-java-options","-XX:MaxPermSize=1G")


sc = SparkContext(conf = conf)

sqlContext = SQLContext(sc)


# IMPORT TABLE P02_QUESITI ----- OK ------
file1 = sc.textFile('hdfs://master:9000/carlo.corona/P02_QUESITI.csv')
split1 = file1.map(lambda l: l.split(";"))
schema1 = split1.map(lambda p: Row(QUESITO_ID=p[0],ORD_VIS=p[1],ELEM_COD=p[2],PARENT_QUESITO_ID=p[3],QUESTIONARIO_ID=p[4],TIPO_FORMATO_COD=p[5],PUNTEGGIO=p[6],OBBLIGATORIO_FLG=p[7],NOTE=p[8],GRP_ESC_ID=p[9],INS_ID=p[10],COND_ID=p[11],USR_INS_ID=p[12],DATA_INS=p[13],USR_MOD_ID=p[14],DATA_MOD=p[15],LIM_MIN=p[16],LIM_MAX=p[17],TAG_COD=p[18],FORMULA_RISP_ID=p[19],VISIBLE_FLG=p[20],CATEG_COD=p[21],PROC_ATTIVA_QUEST_ID=p[22],TIPO_LAYOUT_COD=p[23],NUM_MAX_SCE=p[24],ELEM_DES=p[25],NO_STAT_FLG=p[26],NUM_MAX_VALORI=p[27],OPERANDO_DOM_ID=p[28]))
tab1 = sqlContext.createDataFrame(schema1)
tab1 = tab1.withColumn('QUESITO_ID', tab1['QUESITO_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('ORD_VIS', tab1['ORD_VIS'].cast(IntegerType()))
tab1 = tab1.withColumn('PARENT_QUESITO_ID', tab1['PARENT_QUESITO_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('QUESTIONARIO_ID', tab1['QUESTIONARIO_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('OBBLIGATORIO_FLG', tab1['OBBLIGATORIO_FLG'].cast(IntegerType()))
tab1 = tab1.withColumn('GRP_ESC_ID', tab1['GRP_ESC_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('INS_ID', tab1['INS_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('COND_ID', tab1['COND_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('FORMULA_RISP_ID', tab1['FORMULA_RISP_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('VISIBLE_FLG', tab1['VISIBLE_FLG'].cast(IntegerType()))
tab1 = tab1.withColumn('PROC_ATTIVA_QUEST_ID', tab1['PROC_ATTIVA_QUEST_ID'].cast(IntegerType()))
tab1 = tab1.withColumn('NUM_MAX_SCE', tab1['NUM_MAX_SCE'].cast(IntegerType()))
tab1 = tab1.withColumn('NO_STAT_FLG', tab1['NO_STAT_FLG'].cast(IntegerType()))
tab1 = tab1.withColumn('NUM_MAX_VALORI', tab1['NUM_MAX_VALORI'].cast(IntegerType()))
tab1 = tab1.withColumn('OPERANDO_DOM_ID', tab1['OPERANDO_DOM_ID'].cast(IntegerType()))
#tab1 = tab1.withColumn('DATA_INS', tab1['DATA_INS'].cast(DateType()))
#tab1 = tab1.withColumn('DATA_MOD', tab1['DATA_MOD'].cast(DateType()))
tab1.registerTempTable("P02_QUESITI")


# IMPORT TABLE ELEMENTO_P02_QUESITI ------ OK ------- 
file2 = sc.textFile('hdfs://master:9000/carlo.corona/ELEMENTI.csv') 
split2 = file2.map(lambda l: l.split(";"))
schema2 = split2.map(lambda p: Row(ELEM_COD=p[0], DES=p[1], TIPO_ELEM_COD=p[2], NOTA=p[3], CONT_COD=p[4], USR_INS_ID=p[5], DATA_INS=p[6], USR_MOD_ID=p[7], DATA_MOD=p[8], TIPO_VINC_ASSIST_ID=p[9], TIPO_VINC_ASSIST_DETT_ID=p[10]))
tab2 = sqlContext.createDataFrame(schema2)
tab2 = tab2.withColumn('TIPO_VINC_ASSIST_ID', tab2['TIPO_VINC_ASSIST_ID'].cast(IntegerType()))
tab2 = tab2.withColumn('TIPO_VINC_ASSIST_DETT_ID', tab2['TIPO_VINC_ASSIST_DETT_ID'].cast(IntegerType()))
#tab2 = tab2.withColumn('DATA_INS', tab2['DATA_INS'].cast(DateType()))
#tab2 = tab2.withColumn('DATA_MOD', tab2['DATA_MOD'].cast(DateType()))
tab2.registerTempTable("ELEMENTO_P02_QUESITI")


# IMPORT TABLE ELEMENTO_QUESITI_PADRE  ----- OK -----
file3 = sc.textFile('hdfs://master:9000/carlo.corona/ELEMENTI.csv')
split3 = file3.map(lambda l: l.split(";"))
schema3 = split3.map(lambda p: Row(ELEM_COD=p[0], DES=p[1], TIPO_ELEM_COD=p[2], NOTA=p[3], CONT_COD=p[4], USR_INS_ID=p[5], DATA_INS=p[6], USR_MOD_ID=p[7], DATA_MOD=p[8], TIPO_VINC_ASSIST_ID=p[9], TIPO_VINC_ASSIST_DETT_ID=p[10]))
tab3 = sqlContext.createDataFrame(schema3)
tab3 = tab3.withColumn('TIPO_VINC_ASSIST_ID', tab3['TIPO_VINC_ASSIST_ID'].cast(IntegerType()))
tab3 = tab3.withColumn('TIPO_VINC_ASSIST_DETT_ID', tab3['TIPO_VINC_ASSIST_DETT_ID'].cast(IntegerType()))
#tab3 = tab3.withColumn('DATA_INS', tab3['DATA_INS'].cast(DateType()))
#tab3 = tab3.withColumn('DATA_MOD', tab3['DATA_MOD'].cast(DateType()))
tab3.registerTempTable("ELEMENTO_QUESITI_PADRE")


# IMPORT TABLE P02_RISPOSTE ---- OK ----
file4 = sc.textFile('hdfs://master:9000/carlo.corona/P02_RISPOSTE.csv')
split4 = file4.map(lambda l: l.split(";"))
schema4 = split4.map(lambda p: Row(RISPOSTA_ID=p[0],QUESITO_ID=p[1],QUEST_COMP_ID=p[2],TESTO_LIBERO=p[3],USR_INS_ID=p[4],DATA_INS=p[5],USR_MOD_ID=p[6],DATA_MOD=p[7]))
tab4 = sqlContext.createDataFrame(schema4)
tab4 = tab4.withColumn('RISPOSTA_ID', tab4['RISPOSTA_ID'].cast(IntegerType()))
tab4 = tab4.withColumn('QUESITO_ID', tab4['QUESITO_ID'].cast(IntegerType()))
tab4 = tab4.withColumn('QUEST_COMP_ID', tab4['QUEST_COMP_ID'].cast(IntegerType()))
#tab4 = tab4.withColumn('DATA_INS', tab4['DATA_INS'].cast(DateType()))
#tab4 = tab4.withColumn('DATA_MOD', tab4['DATA_MOD'].cast(DateType()))
tab4.registerTempTable("P02_RISPOSTE")


# IMPORT TABLE P02_QUEST_COMP_RISPOSTE ------ OK ------
"QUEST_COMP_ID","QUESTIONARIO_ID","STATO_QUEST_COD","USR_INS_ID","DATA_INS","USR_MOD_ID","DATA_MOD","COMPLETO_FLG","AUT_FLG","EVENTO_COMP_COD"
file5 = sc.textFile('hdfs://master:9000/carlo.corona/P02_QUEST_COMP.csv')
split5 = file5.map(lambda l: l.split(";"))
schema5 = split5.map(lambda p: Row(QUEST_COMP_ID=p[0],QUESTIONARIO_ID=p[1],STATO_QUEST_COD=p[2],USR_INS_ID=p[3],DATA_INS=p[4],USR_MOD_ID=p[5],DATA_MOD=p[6],COMPLETO_FLG=p[7],AUT_FLG=p[8],EVENTO_COMP_COD=p[9]))
tab5 = sqlContext.createDataFrame(schema5)
tab5 = tab5.withColumn('QUEST_COMP_ID', tab5['QUEST_COMP_ID'].cast(IntegerType()))
tab5 = tab5.withColumn('QUESTIONARIO_ID', tab5['QUESTIONARIO_ID'].cast(IntegerType()))
tab5 = tab5.withColumn('COMPLETO_FLG', tab5['COMPLETO_FLG'].cast(IntegerType()))
tab5 = tab5.withColumn('AUT_FLG', tab5['AUT_FLG'].cast(IntegerType()))
#tab5 = tab5.withColumn('DATA_INS', tab5['DATA_INS'].cast(DateType()))
#tab5 = tab5.withColumn('DATA_MOD', tab5['DATA_MOD'].cast(DateType()))
tab5.registerTempTable("P02_QUEST_COMP_RISPOSTE")


# IMPORT TABLE V02_RISPOSTE_ROW_TESTO_LIBERO ----- OK ------
file6 = sc.textFile('hdfs://master:9000/carlo.corona/V02_RISPOSTE_ROW_TESTO_LIBERO.csv')
split6 = file6.map(lambda l: l.split(";"))
schema6 = split6.map(lambda p: Row(RISPOSTA_ID=p[0], QUESITO_ID=p[1], QUEST_COMP_ID=p[2], USR_INS_ID=p[3], DATA_INS=p[4], USR_MOD_ID=p[5], DATA_MOD=p[6], N_RIGA_TESTO_LIBERO=p[7], RIGA_TESTO_LIBERO=p[8]))
tab6 = sqlContext.createDataFrame(schema6)
tab6 = tab6.withColumn('RISPOSTA_ID', tab6['RISPOSTA_ID'].cast(IntegerType()))
tab6 = tab6.withColumn('QUESITO_ID', tab6['QUESITO_ID'].cast(IntegerType()))
tab6 = tab6.withColumn('QUEST_COMP_ID', tab6['QUEST_COMP_ID'].cast(IntegerType()))
tab6 = tab6.withColumn('N_RIGA_TESTO_LIBERO', tab6['N_RIGA_TESTO_LIBERO'].cast(IntegerType()))
#tab6 = tab6.withColumn('DATA_INS', tab6['DATA_INS'].cast(DateType()))
#tab6 = tab6.withColumn('DATA_MOD', tab6['DATA_MOD'].cast(DateType()))
tab6.registerTempTable("V02_RISPOSTE_ROW_TESTO_LIBERO")


# IMPORT TABLE P02_TIPI_FORMATO ----- OK ------
file7 = sc.textFile('hdfs://master:9000/carlo.corona/P02_TIPI_FORMATO.csv')
split7 = file7.map(lambda l: l.split(";"))
schema7 = split7.map(lambda p: Row(TIPO_FORMATO_COD=p[0],DES=p[1],TIPO_ELEM_COD=p[2],SYS_FLG=p[3],USR_INS_ID=p[4],DATA_INS=p[5],USR_MOD_ID=p[6],DATA_MOD=p[7]))
tab7 = sqlContext.createDataFrame(schema7)
tab7 = tab7.withColumn('SYS_FLG', tab7['SYS_FLG'].cast(IntegerType()))
#tab7 = tab7.withColumn('DATA_INS', tab7['DATA_INS'].cast(DateType()))
#tab7 = tab7.withColumn('DATA_MOD', tab7['DATA_MOD'].cast(DateType()))
tab7.registerTempTable("P02_TIPI_FORMATO")


# IMPORT TABLE Q35_DATI_COMP ------ OK --------
file8 = sc.textFile('hdfs://master:9000/carlo.corona/Q35_DATI_COMP.csv')
split8 = file8.map(lambda l: l.split(";"))
schema8 = split8.map(lambda p: Row(QUEST_COMP_ID=p[0],AA_CFU_STU_COMP=p[1],AA_ID_COMP=p[2],AA_IMM1_COMP=p[3],AA_IMM_SU_COMP=p[4],AA_ISCR_ID_COMP=p[5],AA_OFF_AD_ID_VAL=p[6],AA_ORD_AD_ID_VAL=p[7],AA_ORD_ID_COMP=p[8],AD_ID_VAL=p[9],ANNO_CORSO_AD_VAL=p[10],ANNO_CORSO_COMP=p[11],ANNO_MATUR_COMP=p[12],ANNO_NASCITA_COMP=p[13],CDS_AD_ID_VAL=p[14],CDS_ID_COMP=p[15],CFU_AA_STU_COMP=p[16],CFU_ACQ_STU_COMP=p[17],CITT_COD_COMP=p[18],DATAORA_COMP=p[19],DOC_AD_ID_VAL=p[20],DOC_TIT_AD_ID_VAL=p[21],DOM_PART_AD_COD_VAL=p[22],EVENTO_COMP=p[23],FAC_ID_COMP=p[24],FAT_PART_AD_COD_VAL=p[25],LODE_MATUR_FLG_COMP=p[26],MEDIA_STU_COMP=p[27],NAZ_MATUR_ID_COMP=p[28],NAZ_ORD_TIT_ID_COMP=p[29],NAZ_RES_ID_COMP=p[30],PART_AD_COD_VAL=p[31],PDS_AD_ID_VAL=p[32],PDS_ID_COMP=p[33],PROF_COD_COMP=p[34],PROV_NASC_COMP=p[35],PROV_RES_COMP=p[36],SCUOLA_SUP_ID_COMP=p[37],SEDE_ID_COMP=p[38],SESSO_COMP=p[39],STU_FREQ_FLG_COMP=p[40],STU_NO_AUT_FLG_COMP=p[41],TIPO_CRE_AD_COD_VAL=p[42],TIPO_DID_COD_COMP=p[43],TIPO_ISCR_COD_COMP=p[44],TIPO_TITOLO_COD_COMP=p[45],TIPO_TITST_COD_COMP=p[46],UD_ID_VAL=p[47],VOTO_ALFA_MATUR_COMP=p[48],VOTO_MATUR_COMP=p[49],VOTO_MAX_MATUR_COMP=p[50],VOTO_MIN_MATUR_COMP=p[51] ))
tab8 = sqlContext.createDataFrame(schema8)
tab8 = tab8.withColumn('QUEST_COMP_ID', tab8['QUEST_COMP_ID'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_CFU_STU_COMP', tab8['AA_CFU_STU_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_ID_COMP', tab8['AA_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_IMM1_COMP', tab8['AA_IMM1_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_IMM_SU_COMP', tab8['AA_IMM_SU_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_ISCR_ID_COMP', tab8['AA_ISCR_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_OFF_AD_ID_VAL', tab8['AA_OFF_AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_ORD_AD_ID_VAL', tab8['AA_ORD_AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('AA_ORD_ID_COMP', tab8['AA_ORD_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('AD_ID_VAL', tab8['AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('ANNO_CORSO_AD_VAL', tab8['ANNO_CORSO_AD_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('ANNO_CORSO_COMP', tab8['ANNO_CORSO_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('ANNO_MATUR_COMP', tab8['ANNO_MATUR_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('ANNO_NASCITA_COMP', tab8['ANNO_NASCITA_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('CDS_AD_ID_VAL', tab8['CDS_AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('CDS_ID_COMP', tab8['CDS_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('CFU_AA_STU_COMP', tab8['CFU_AA_STU_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('CFU_ACQ_STU_COMP', tab8['CFU_ACQ_STU_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('DOC_AD_ID_VAL', tab8['DOC_AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('DOC_TIT_AD_ID_VAL', tab8['DOC_TIT_AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('FAC_ID_COMP', tab8['FAC_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('LODE_MATUR_FLG_COMP', tab8['LODE_MATUR_FLG_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('MEDIA_STU_COMP', tab8['MEDIA_STU_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('NAZ_MATUR_ID_COMP', tab8['NAZ_MATUR_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('NAZ_ORD_TIT_ID_COMP', tab8['NAZ_ORD_TIT_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('NAZ_RES_ID_COMP', tab8['NAZ_RES_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('PDS_AD_ID_VAL', tab8['PDS_AD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('PDS_ID_COMP', tab8['PDS_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('SCUOLA_SUP_ID_COMP', tab8['SCUOLA_SUP_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('SEDE_ID_COMP', tab8['SEDE_ID_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('STU_FREQ_FLG_COMP', tab8['STU_FREQ_FLG_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('STU_NO_AUT_FLG_COMP', tab8['STU_NO_AUT_FLG_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('UD_ID_VAL', tab8['UD_ID_VAL'].cast(IntegerType()))
tab8 = tab8.withColumn('VOTO_MATUR_COMP', tab8['VOTO_MATUR_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('VOTO_MAX_MATUR_COMP', tab8['VOTO_MAX_MATUR_COMP'].cast(IntegerType()))
tab8 = tab8.withColumn('VOTO_MIN_MATUR_COMP', tab8['VOTO_MIN_MATUR_COMP'].cast(IntegerType()))
func =  udf (lambda x: datetime.strptime(x, '%d/%m/%Y'), DateType())
tab8 = tab8.withColumn('DATAORA_COMP', func(col('DATAORA_COMP')))
tab8.registerTempTable("Q35_DATI_COMP")


# IMPORT TABLE Q35_FAC_COMP ------ OK -------
file9 = sc.textFile('hdfs://master:9000/carlo.corona/P06_FAC.csv')
split9 = file9.map(lambda l: l.split(";"))
schema9 = split9.map(lambda p: Row(FAC_ID=p[0],ISTAT_COD=p[1],COD=p[2],DES=p[3],ATENEO_ID=p[4],CITTA=p[5],VIA=p[6],PROV=p[7],CAP=p[8],CF=p[9],PRESDIR=p[10],FIRMA_CERT=p[11],AA_ATT_ID=p[12],AA_DIS_ID=p[13],SYS_FLG=p[14],URL_SITO_WEB=p[15],WEB_VIEW_FLG=p[16],COMUNE_ID=p[17],TEL=p[18],FAX=p[19],EMAIL=p[20],DES_CERT=p[21],COD_STAT_MIUR=p[22],ACRONIMO_FAC=p[23],CSA_COD=p[24],USR_INS_ID=p[25],DATA_INS=p[26],USR_MOD_ID=p[27],DATA_MOD=p[28],DEF_APPELLI_WEB=p[29],COD_FACOLTA=p[30],NOTE=p[31],DES_BREVE=p[32],SDR_TIP=p[33],TMP_ID=p[34],DES_CERT_GENIT=p[35],DES_CERT_LOCAT=p[36],DES_CERT_VOCAT=p[37],EMAIL_NOTIF_REGLEZ=p[38],ID_STRUTTURA=p[39],RAC_FLG=p[40],AREA_DISC_COD=p[41]))
tab9 = sqlContext.createDataFrame(schema9)
tab9 = tab9.withColumn('FAC_ID', tab9['FAC_ID'].cast(IntegerType()))
tab9 = tab9.withColumn('ATENEO_ID', tab9['ATENEO_ID'].cast(IntegerType()))
tab9 = tab9.withColumn('AA_ATT_ID', tab9['AA_ATT_ID'].cast(IntegerType()))
tab9 = tab9.withColumn('AA_DIS_ID', tab9['AA_DIS_ID'].cast(IntegerType()))
tab9 = tab9.withColumn('SYS_FLG', tab9['SYS_FLG'].cast(IntegerType()))
tab9 = tab9.withColumn('WEB_VIEW_FLG', tab9['WEB_VIEW_FLG'].cast(IntegerType()))
tab9 = tab9.withColumn('COMUNE_ID', tab9['COMUNE_ID'].cast(IntegerType()))
tab9 = tab9.withColumn('DEF_APPELLI_WEB', tab9['DEF_APPELLI_WEB'].cast(IntegerType()))
tab9 = tab9.withColumn('TMP_ID', tab9['TMP_ID'].cast(IntegerType()))
tab9 = tab9.withColumn('RAC_FLG', tab9['RAC_FLG'].cast(IntegerType()))
#tab9 = tab9.withColumn('DATA_INS', tab9['DATA_INS'].cast(DateType()))
#tab9 = tab9.withColumn('DATA_MOD', tab9['DATA_MOD'].cast(DateType()))
tab9.registerTempTable("Q35_FAC_COMP")


# IMPORT TABLE Q35_CDS_COMP ----------- OK ------------
file10 = sc.textFile('hdfs://master:9000/carlo.corona/P06_CDS.csv')
split10 = file10.map(lambda l: l.split(";"))
schema10 = split10.map(lambda p: Row(CDS_ID=p[0],TIPO_CORSO_COD=p[1],NUM_LINGUE=p[2],COD=p[3],TIPO_DID_COD=p[4],ISTAT_COD=p[5],TITOLO=p[6],DES=p[7],MAX_PUNTI=p[8],RIF_FLG=p[9],UM_PESO_COD=p[10],AA_ATT_ID=p[11],AA_DIS_ID=p[12],TIPO_SPEC_COD=p[13],ARCH_STR=p[14],POSTI_STAT_FLG=p[15],CONV_FLG=p[16],SETT_FLG=p[17],DES_CERT=p[18],DES_PERG=p[19],TIPO_TITIT_COD=p[20],RESP_ID=p[21],ACC_RIS_FLG=p[22],WEB_IMMAT_FLG=p[23],WEB_VIEW_FLG=p[24],PERGA_TIPO_ESA_DES=p[25],PERGA_TIPO_TIT_DES=p[26],TRASM_ALMA_FLG=p[27],DS_TIPO_TIT_DES=p[28],DS_REQ_CT_DES=p[29],PERGA_ART_TIT_DES=p[30],ASS_NUM_REG_PERGA_FLG=p[31],DS_ACCESSO_STUDI_DES=p[32],DS_STATUS_PROF_DES=p[33],NOTA_PIANI_IND=p[34],USR_INS_ID=p[35],DATA_INS=p[36],USR_MOD_ID=p[37],DATA_MOD=p[38],INS_AD_PROFIN_FLG=p[39],URL_SITO_WEB=p[40],URL_INFO_WEB=p[41],DS_PROVE_AMM_DES=p[42],COD_STAT_MIUR=p[43],CDS_FORMSTR=p[44],NORM_ID=p[45],CSA_COD=p[46],DES_CERT_BIS=p[47],ENTE_ID=p[48],NORM_DES_CERT=p[49],SCUOLA_SPEC_ID=p[50],ACRONIMO=p[51],TIPO_MASTER_COD=p[52],RANGE_MAT_ID=p[53],TITIT_CERT_DES=p[54],NOTE=p[55],FORMSTR_COD=p[56],FORMSTR_PRG_COD=p[57],IMP_UGOV_DID_FLG=p[58],DES_CERT_GENIT=p[59],DES_CERT_LOCAT=p[60],DES_CERT_VOCAT=p[61],TIRO_TUTOR_PSICO_FLG=p[62],STAT_MIUR_FLG=p[63],DECRETO_ID=p[64],EMAIL_NOTIF_REGLEZ=p[65],CLA_AREA_ID=p[66],DES_LINGUA_ORI=p[67] ))
tab10 = sqlContext.createDataFrame(schema10)
tab10 = tab10.withColumn('CDS_ID', tab10['CDS_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('NUM_LINGUE', tab10['NUM_LINGUE'].cast(IntegerType()))
tab10 = tab10.withColumn('MAX_PUNTI', tab10['MAX_PUNTI'].cast(IntegerType()))
tab10 = tab10.withColumn('RIF_FLG', tab10['RIF_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('AA_ATT_ID', tab10['AA_ATT_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('AA_DIS_ID', tab10['AA_DIS_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('POSTI_STAT_FLG', tab10['POSTI_STAT_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('CONV_FLG', tab10['CONV_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('SETT_FLG', tab10['SETT_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('RESP_ID', tab10['RESP_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('ACC_RIS_FLG', tab10['ACC_RIS_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('WEB_IMMAT_FLG', tab10['WEB_IMMAT_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('WEB_VIEW_FLG', tab10['WEB_VIEW_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('TRASM_ALMA_FLG', tab10['TRASM_ALMA_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('ASS_NUM_REG_PERGA_FLG', tab10['ASS_NUM_REG_PERGA_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('INS_AD_PROFIN_FLG', tab10['INS_AD_PROFIN_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('NORM_ID', tab10['NORM_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('ENTE_ID', tab10['ENTE_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('SCUOLA_SPEC_ID', tab10['SCUOLA_SPEC_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('RANGE_MAT_ID', tab10['RANGE_MAT_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('IMP_UGOV_DID_FLG', tab10['IMP_UGOV_DID_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('TIRO_TUTOR_PSICO_FLG', tab10['TIRO_TUTOR_PSICO_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('STAT_MIUR_FLG', tab10['STAT_MIUR_FLG'].cast(IntegerType()))
tab10 = tab10.withColumn('DECRETO_ID', tab10['DECRETO_ID'].cast(IntegerType()))
tab10 = tab10.withColumn('CLA_AREA_ID', tab10['CLA_AREA_ID'].cast(IntegerType()))
#tab10 = tab10.withColumn('DATA_INS', tab10['DATA_INS'].cast(DateType()))
#tab10 = tab10.withColumn('DATA_MOD', tab10['DATA_MOD'].cast(DateType()))
tab10.registerTempTable("Q35_CDS_COMP")


# IMPORT TABLE Q35_DOCENTE_AD_VAL ------- OK ---------
file11 = sc.textFile('hdfs://master:9000/carlo.corona/DOCENTI.csv')
split11 = file11.map(lambda l: l.split(";"))
schema11 = split11.map(lambda p: Row(DOCENTE_ID=p[0],SETT_COD=p[1],MATRICOLA=p[2],FAC_ID=p[3],DIP_ID=p[4],ORIG_DATO_COD=p[5],RUOLO_DOC_COD=p[6],APPELLATIVO=p[7],NOMINATIVO_ALT=p[8],DATA_INI_ATT=p[9],DATA_FIN_ATT=p[10],NAZI_NASC_ID=p[11],COM_NASC_ID=p[12],LOCALITA_NASC_ID=p[13],CITSTRA_NASC=p[14],USR_INS_ID=p[15],DATA_INS=p[16],USR_MOD_ID=p[17],DATA_MOD=p[18],FIRMA_ID=p[19],DATA_INI_RUOLO=p[20],ATENEO_ID=p[21],ID_AB=p[22],OPER_CELLULARE=p[23],CONS_SMS_FLG=p[24],PROFILO=p[25]))
tab11 = sqlContext.createDataFrame(schema11)
tab11 = tab11.withColumn('DOCENTE_ID', tab11['DOCENTE_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('FAC_ID', tab11['FAC_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('DIP_ID', tab11['DIP_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('NAZI_NASC_ID', tab11['NAZI_NASC_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('COM_NASC_ID', tab11['COM_NASC_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('LOCALITA_NASC_ID', tab11['LOCALITA_NASC_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('FIRMA_ID', tab11['FIRMA_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('ATENEO_ID', tab11['ATENEO_ID'].cast(IntegerType()))
tab11 = tab11.withColumn('ID_AB', tab11['ID_AB'].cast(IntegerType()))
tab11 = tab11.withColumn('OPER_CELLULARE', tab11['OPER_CELLULARE'].cast(IntegerType()))
tab11 = tab11.withColumn('CONS_SMS_FLG', tab11['CONS_SMS_FLG'].cast(IntegerType()))
#tab11 = tab11.withColumn('DATA_INS', tab11['DATA_INS'].cast(DateType()))
#tab11 = tab11.withColumn('DATA_MOD', tab11['DATA_MOD'].cast(DateType()))
#tab11 = tab11.withColumn('DATA_INI_ATT', tab11['DATA_INI_ATT'].cast(DateType()))
#tab11 = tab11.withColumn('DATA_FIN_ATT', tab11['DATA_FIN_ATT'].cast(DateType()))
#tab11 = tab11.withColumn('DATA_INI_RUOLO', tab11['DATA_INI_RUOLO'].cast(DateType()))
tab11.registerTempTable("Q35_DOCENTE_AD_VAL")


# IMPORT TABLE Q35_DOCENTE_TIT_AD_VAL -------- OK ---------
file12 = sc.textFile('hdfs://master:9000/carlo.corona/DOCENTI.csv')
split12 = file12.map(lambda l: l.split(";"))
schema12 = split12.map(lambda p: Row(DOCENTE_ID=p[0],SETT_COD=p[1],MATRICOLA=p[2],FAC_ID=p[3],DIP_ID=p[4],ORIG_DATO_COD=p[5],RUOLO_DOC_COD=p[6],APPELLATIVO=p[7],NOMINATIVO_ALT=p[8],DATA_INI_ATT=p[9],DATA_FIN_ATT=p[10],NAZI_NASC_ID=p[11],COM_NASC_ID=p[12],LOCALITA_NASC_ID=p[13],CITSTRA_NASC=p[14],USR_INS_ID=p[15],DATA_INS=p[16],USR_MOD_ID=p[17],DATA_MOD=p[18],FIRMA_ID=p[19],DATA_INI_RUOLO=p[20],ATENEO_ID=p[21],ID_AB=p[22],OPER_CELLULARE=p[23],CONS_SMS_FLG=p[24],PROFILO=p[25]))
tab12 = sqlContext.createDataFrame(schema12)
tab12 = tab12.withColumn('DOCENTE_ID', tab12['DOCENTE_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('FAC_ID', tab12['FAC_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('DIP_ID', tab12['DIP_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('NAZI_NASC_ID', tab12['NAZI_NASC_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('COM_NASC_ID', tab12['COM_NASC_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('LOCALITA_NASC_ID', tab12['LOCALITA_NASC_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('FIRMA_ID', tab12['FIRMA_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('ATENEO_ID', tab12['ATENEO_ID'].cast(IntegerType()))
tab12 = tab12.withColumn('ID_AB', tab12['ID_AB'].cast(IntegerType()))
tab12 = tab12.withColumn('OPER_CELLULARE', tab12['OPER_CELLULARE'].cast(IntegerType()))
tab12 = tab12.withColumn('CONS_SMS_FLG', tab12['CONS_SMS_FLG'].cast(IntegerType()))
#tab12 = tab12.withColumn('DATA_INS', tab12['DATA_INS'].cast(DateType()))
#tab12 = tab12.withColumn('DATA_MOD', tab12['DATA_MOD'].cast(DateType()))
#tab12 = tab12.withColumn('DATA_INI_ATT', tab12['DATA_INI_ATT'].cast(DateType()))
#tab12 = tab12.withColumn('DATA_FIN_ATT', tab12['DATA_FIN_ATT'].cast(DateType()))
#tab12 = tab12.withColumn('DATA_INI_RUOLO', tab12['DATA_INI_RUOLO'].cast(DateType()))
tab12.registerTempTable("Q35_DOCENTE_TIT_AD_VAL")

# IMPORT TABLE Q35_CDS_AD_VAL -------- OK ----------
file13 = sc.textFile('hdfs://master:9000/carlo.corona/P06_CDS.csv')
split13 = file13.map(lambda l: l.split(";"))
schema13 = split13.map(lambda p: Row(CDS_ID=p[0],TIPO_CORSO_COD=p[1],NUM_LINGUE=p[2],COD=p[3],TIPO_DID_COD=p[4],ISTAT_COD=p[5],TITOLO=p[6],DES=p[7],MAX_PUNTI=p[8],RIF_FLG=p[9],UM_PESO_COD=p[10],AA_ATT_ID=p[11],AA_DIS_ID=p[12],TIPO_SPEC_COD=p[13],ARCH_STR=p[14],POSTI_STAT_FLG=p[15],CONV_FLG=p[16],SETT_FLG=p[17],DES_CERT=p[18],DES_PERG=p[19],TIPO_TITIT_COD=p[20],RESP_ID=p[21],ACC_RIS_FLG=p[22],WEB_IMMAT_FLG=p[23],WEB_VIEW_FLG=p[24],PERGA_TIPO_ESA_DES=p[25],PERGA_TIPO_TIT_DES=p[26],TRASM_ALMA_FLG=p[27],DS_TIPO_TIT_DES=p[28],DS_REQ_CT_DES=p[29],PERGA_ART_TIT_DES=p[30],ASS_NUM_REG_PERGA_FLG=p[31],DS_ACCESSO_STUDI_DES=p[32],DS_STATUS_PROF_DES=p[33],NOTA_PIANI_IND=p[34],USR_INS_ID=p[35],DATA_INS=p[36],USR_MOD_ID=p[37],DATA_MOD=p[38],INS_AD_PROFIN_FLG=p[39],URL_SITO_WEB=p[40],URL_INFO_WEB=p[41],DS_PROVE_AMM_DES=p[42],COD_STAT_MIUR=p[43],CDS_FORMSTR=p[44],NORM_ID=p[45],CSA_COD=p[46],DES_CERT_BIS=p[47],ENTE_ID=p[48],NORM_DES_CERT=p[49],SCUOLA_SPEC_ID=p[50],ACRONIMO=p[51],TIPO_MASTER_COD=p[52],RANGE_MAT_ID=p[53],TITIT_CERT_DES=p[54],NOTE=p[55],FORMSTR_COD=p[56],FORMSTR_PRG_COD=p[57],IMP_UGOV_DID_FLG=p[58],DES_CERT_GENIT=p[59],DES_CERT_LOCAT=p[60],DES_CERT_VOCAT=p[61],TIRO_TUTOR_PSICO_FLG=p[62],STAT_MIUR_FLG=p[63],DECRETO_ID=p[64],EMAIL_NOTIF_REGLEZ=p[65],CLA_AREA_ID=p[66],DES_LINGUA_ORI=p[67] ))
tab13 = sqlContext.createDataFrame(schema13)
tab13 = tab13.withColumn('CDS_ID', tab13['CDS_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('NUM_LINGUE', tab13['NUM_LINGUE'].cast(IntegerType()))
tab13 = tab13.withColumn('MAX_PUNTI', tab13['MAX_PUNTI'].cast(IntegerType()))
tab13 = tab13.withColumn('RIF_FLG', tab13['RIF_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('AA_ATT_ID', tab13['AA_ATT_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('AA_DIS_ID', tab13['AA_DIS_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('POSTI_STAT_FLG', tab13['POSTI_STAT_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('CONV_FLG', tab13['CONV_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('SETT_FLG', tab13['SETT_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('RESP_ID', tab13['RESP_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('ACC_RIS_FLG', tab13['ACC_RIS_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('WEB_IMMAT_FLG', tab13['WEB_IMMAT_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('WEB_VIEW_FLG', tab13['WEB_VIEW_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('TRASM_ALMA_FLG', tab13['TRASM_ALMA_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('ASS_NUM_REG_PERGA_FLG', tab13['ASS_NUM_REG_PERGA_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('INS_AD_PROFIN_FLG', tab13['INS_AD_PROFIN_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('NORM_ID', tab13['NORM_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('ENTE_ID', tab13['ENTE_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('SCUOLA_SPEC_ID', tab13['SCUOLA_SPEC_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('RANGE_MAT_ID', tab13['RANGE_MAT_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('IMP_UGOV_DID_FLG', tab13['IMP_UGOV_DID_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('TIRO_TUTOR_PSICO_FLG', tab13['TIRO_TUTOR_PSICO_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('STAT_MIUR_FLG', tab13['STAT_MIUR_FLG'].cast(IntegerType()))
tab13 = tab13.withColumn('DECRETO_ID', tab13['DECRETO_ID'].cast(IntegerType()))
tab13 = tab13.withColumn('CLA_AREA_ID', tab13['CLA_AREA_ID'].cast(IntegerType()))
#tab13 = tab13.withColumn('DATA_INS', tab13['DATA_INS'].cast(DateType()))
#tab13 = tab13.withColumn('DATA_MOD', tab13['DATA_MOD'].cast(DateType()))
tab13.registerTempTable("Q35_CDS_AD_VAL")


# IMPORT TABLE Q35_FAC_AD_VAL  -------- OK ---------
file14 = sc.textFile('hdfs://master:9000/carlo.corona/P06_FAC.csv')
split14 = file14.map(lambda l: l.split(";"))
schema14 = split14.map(lambda p: Row(FAC_ID=p[0],ISTAT_COD=p[1],COD=p[2],DES=p[3],ATENEO_ID=p[4],CITTA=p[5],VIA=p[6],PROV=p[7],CAP=p[8],CF=p[9],PRESDIR=p[10],FIRMA_CERT=p[11],AA_ATT_ID=p[12],AA_DIS_ID=p[13],SYS_FLG=p[14],URL_SITO_WEB=p[15],WEB_VIEW_FLG=p[16],COMUNE_ID=p[17],TEL=p[18],FAX=p[19],EMAIL=p[20],DES_CERT=p[21],COD_STAT_MIUR=p[22],ACRONIMO_FAC=p[23],CSA_COD=p[24],USR_INS_ID=p[25],DATA_INS=p[26],USR_MOD_ID=p[27],DATA_MOD=p[28],DEF_APPELLI_WEB=p[29],COD_FACOLTA=p[30],NOTE=p[31],DES_BREVE=p[32],SDR_TIP=p[33],TMP_ID=p[34],DES_CERT_GENIT=p[35],DES_CERT_LOCAT=p[36],DES_CERT_VOCAT=p[37],EMAIL_NOTIF_REGLEZ=p[38],ID_STRUTTURA=p[39],RAC_FLG=p[40],AREA_DISC_COD=p[41]))
tab14 = sqlContext.createDataFrame(schema14)
tab14 = tab14.withColumn('FAC_ID', tab14['FAC_ID'].cast(IntegerType()))
tab14 = tab14.withColumn('ATENEO_ID', tab14['ATENEO_ID'].cast(IntegerType()))
tab14 = tab14.withColumn('AA_ATT_ID', tab14['AA_ATT_ID'].cast(IntegerType()))
tab14 = tab14.withColumn('AA_DIS_ID', tab14['AA_DIS_ID'].cast(IntegerType()))
tab14 = tab14.withColumn('SYS_FLG', tab14['SYS_FLG'].cast(IntegerType()))
tab14 = tab14.withColumn('WEB_VIEW_FLG', tab14['WEB_VIEW_FLG'].cast(IntegerType()))
tab14 = tab14.withColumn('COMUNE_ID', tab14['COMUNE_ID'].cast(IntegerType()))
tab14 = tab14.withColumn('DEF_APPELLI_WEB', tab14['DEF_APPELLI_WEB'].cast(IntegerType()))
tab14 = tab14.withColumn('TMP_ID', tab14['TMP_ID'].cast(IntegerType()))
tab14 = tab14.withColumn('RAC_FLG', tab14['RAC_FLG'].cast(IntegerType()))
#tab14 = tab14.withColumn('DATA_INS', tab14['DATA_INS'].cast(DateType()))
#tab14 = tab14.withColumn('DATA_MOD', tab14['DATA_MOD'].cast(DateType()))
tab14.registerTempTable("Q35_FAC_AD_VAL")


# IMPORT TABLE Q35_P09_AD_GEN
file15 = sc.textFile('hdfs://master:9000/carlo.corona/P09_AD_GEN.csv')
split15 = file15.map(lambda l: l.split(";"))
schema15 = split15.map(lambda p: Row(AD_ID=p[0],COD=p[1],DES=p[2],RIF_FLG=p[3],USR_INS_ID=p[4],DATA_INS=p[5],USR_MOD_ID=p[6],DATA_MOD=p[7],TIPO_ENTITA=p[8],EXT_CODE=p[9],PESO=p[10]))
tab15 = sqlContext.createDataFrame(schema15)
tab15 = tab15.withColumn('AD_ID', tab15['AD_ID'].cast(IntegerType()))
tab15 = tab15.withColumn('RIF_FLG', tab15['RIF_FLG'].cast(IntegerType()))
tab15 = tab15.withColumn('TIPO_ENTITA', tab15['TIPO_ENTITA'].cast(IntegerType()))
tab15 = tab15.withColumn('PESO', tab15['PESO'].cast(IntegerType()))
#tab15 = tab15.withColumn('DATA_INS', tab15['DATA_INS'].cast(DateType()))
#tab15 = tab15.withColumn('DATA_MOD', tab15['DATA_MOD'].cast(DateType()))
tab15.registerTempTable("Q35_P09_AD_GEN")


# IMPORT TABLE Q35_SCUOLA  ------- OK --------
file16 = sc.textFile('hdfs://master:9000/carlo.corona/P01_SCUOLA.csv')
split16 = file16.map(lambda l: l.split(";"))
schema16 = split16.map(lambda p: Row(SCUOLA_SUP_ID=p[0],DES=p[1],TIPOLOGIA_COD=p[2],VIA=p[3],NUMERO_CIVICO=p[4],CAP=p[5],TELEFONO=p[6],FAX=p[7],LOCALITA=p[8],COD_MIUR=p[9],COMUNE_ID=p[10],EMAIL=p[11],COD_ATENEO=p[12],EMAIL_MINIST=p[13],COD_UNIVERSO=p[14],IST_RIF_ID=p[15],NUOVO_IST_ID=p[16],TIPI_IST_ID=p[17],SCUOLA_NON_STAT_FLG=p[18],DISTRETTO=p[19],NUOVO_FLG=p[20],CANC_FLG=p[21],AA_INI_VAL=p[22],AA_FINE_VAL=p[23],ID_SCUOLA_MIUR=p[24],WEB_FLG=p[25],NO_AGGIORNA_FLG=p[26],USR_INS_ID=p[27],DATA_INS=p[28],USR_MOD_ID=p[29],DATA_MOD=p[30],NOTE=p[31],NOTE_CRONOLOGIA=p[32],SYS_FLG=p[33]))
tab16 = sqlContext.createDataFrame(schema16)
tab16 = tab16.withColumn('SCUOLA_SUP_ID', tab16['SCUOLA_SUP_ID'].cast(IntegerType()))
tab16 = tab16.withColumn('COMUNE_ID', tab16['COMUNE_ID'].cast(IntegerType()))
tab16 = tab16.withColumn('IST_RIF_ID', tab16['IST_RIF_ID'].cast(IntegerType()))
tab16 = tab16.withColumn('NUOVO_IST_ID', tab16['NUOVO_IST_ID'].cast(IntegerType()))
tab16 = tab16.withColumn('TIPI_IST_ID', tab16['TIPI_IST_ID'].cast(IntegerType()))
tab16 = tab16.withColumn('SCUOLA_NON_STAT_FLG', tab16['SCUOLA_NON_STAT_FLG'].cast(IntegerType()))
tab16 = tab16.withColumn('NUOVO_FLG', tab16['NUOVO_FLG'].cast(IntegerType()))
tab16 = tab16.withColumn('CANC_FLG', tab16['CANC_FLG'].cast(IntegerType()))
tab16 = tab16.withColumn('AA_INI_VAL', tab16['AA_INI_VAL'].cast(IntegerType()))
tab16 = tab16.withColumn('AA_FINE_VAL', tab16['AA_FINE_VAL'].cast(IntegerType()))
tab16 = tab16.withColumn('ID_SCUOLA_MIUR', tab16['ID_SCUOLA_MIUR'].cast(IntegerType()))
tab16 = tab16.withColumn('WEB_FLG', tab16['WEB_FLG'].cast(IntegerType()))
tab16 = tab16.withColumn('NO_AGGIORNA_FLG', tab16['NO_AGGIORNA_FLG'].cast(IntegerType()))
tab16 = tab16.withColumn('SYS_FLG', tab16['SYS_FLG'].cast(IntegerType()))
#tab16 = tab16.withColumn('DATA_INS', tab16['DATA_INS'].cast(DateType()))
#tab16 = tab16.withColumn('DATA_MOD', tab16['DATA_MOD'].cast(DateType()))
tab16.registerTempTable("Q35_SCUOLA")


# IMPORT TABLE Q35_TIPI_TITOLO_SUP ----- OK -------
file17 = sc.textFile('hdfs://master:9000/carlo.corona/TIPI_TITOLO_SUP.csv')
split17 = file17.map(lambda l: l.split(";"))
schema17 = split17.map(lambda p: Row(TIPO_TITOLO_COD=p[0],ID_MACRO_TIPO=p[1],ID_TIPO_IST=p[2],ID_TITOLO=p[3],TIPOLOGIA_COD=p[4],DES=p[5],SYS_FLG=p[6],ID_DIPLOMA=p[7],ALMA_COD=p[8],ANNO_INT_FLG=p[9],ABIL_VIS_FLG=p[10] ))
tab17 = sqlContext.createDataFrame(schema17)
tab17 = tab17.withColumn('ID_MACRO_TIPO', tab17['ID_MACRO_TIPO'].cast(IntegerType()))
tab17 = tab17.withColumn('ID_TIPO_IST', tab17['ID_TIPO_IST'].cast(IntegerType()))
tab17 = tab17.withColumn('ID_TITOLO', tab17['ID_TITOLO'].cast(IntegerType()))
tab17 = tab17.withColumn('SYS_FLG', tab17['SYS_FLG'].cast(IntegerType()))
tab17 = tab17.withColumn('ID_DIPLOMA', tab17['ID_DIPLOMA'].cast(IntegerType()))
tab17 = tab17.withColumn('ALMA_COD', tab17['ALMA_COD'].cast(IntegerType()))
tab17 = tab17.withColumn('ANNO_INT_FLG', tab17['ANNO_INT_FLG'].cast(IntegerType()))
tab17 = tab17.withColumn('ABIL_VIS_FLG', tab17['ABIL_VIS_FLG'].cast(IntegerType()))
tab17.registerTempTable("Q35_TIPI_TITOLO_SUP")


# IMPORT TABLE Q35_P09_UD_CDS ----- OK -----
file18 = sc.textFile('hdfs://master:9000/carlo.corona/P09_UD_CDS.csv')
split18 = file18.map(lambda l: l.split(";"))
schema18 = split18.map(lambda p: Row(UD_ID=p[0],CDS_ID=p[1],AA_OFF_ID=p[2],AD_ID=p[3],DES=p[4],COD=p[5],PROGR_URL=p[6],TIPO_UD_COD=p[7],USR_INS_ID=p[8],DATA_INS=p[9],USR_MOD_ID=p[10],DATA_MOD=p[11] ))
tab18 = sqlContext.createDataFrame(schema18)
tab18 = tab18.withColumn('UD_ID', tab18['UD_ID'].cast(IntegerType()))
tab18 = tab18.withColumn('CDS_ID', tab18['CDS_ID'].cast(IntegerType()))
tab18 = tab18.withColumn('AA_OFF_ID', tab18['AA_OFF_ID'].cast(IntegerType()))
tab18 = tab18.withColumn('AD_ID', tab18['AD_ID'].cast(IntegerType()))
#tab18 = tab18.withColumn('DATA_INS', tab18['DATA_INS'].cast(DateType()))
#tab18 = tab18.withColumn('DATA_MOD', tab18['DATA_MOD'].cast(DateType()))
tab18.registerTempTable("Q35_P09_UD_CDS")


# IMPORT TABLE Q35_TIPI_CORSO_AD_VAL ------ OK --------
file19 = sc.textFile('hdfs://master:9000/carlo.corona/TIPI_CORSO.csv')
split19 = file19.map(lambda l: l.split(";"))
schema19 = split19.map(lambda p: Row(TIPO_CORSO_COD=p[0],TIPO_CORSO_DES=p[1],DURATA_ANNI=p[2],VALORE_MIN=p[3],RIF_FLG=p[4],LIVELLO=p[5],SYS_FLG=p[6],APPELLATIVO_M=p[7],APPELLATIVO_F=p[8],ALMA_COD=p[9],TIPO_TITIT_COD=p[10],TIPO_CORSO_MIUR_COD=p[11],TIPO_CORSO_ETIC_DES=p[12],ID_TIPO_LAUREA=p[13],GEN_IPO_FLG=p[14],CSA_COD=p[15],TIPO_CORSO_VULC_COD=p[16],ANS_FLG=p[17],UM_DURATA=p[18],DURATA_EFFETTIVA=p[19],NORM_ID=p[20],ATTMAT_ATTISCR_CHK=p[21],DM270_MAX_ESA=p[22],DM270_MAXCFU_RIC=p[23],DES_CERT=p[24],MAX_POSTI_PART=p[25],REIMMATRICOLABILE_FLG=p[26],MAX_PUNTI_FLG=p[27],COPIA_BORSA=p[28],COPIA_BORSA_ATTIVA=p[29],COPIA_BORSA_MIN=p[30],CLASSE_FLG=p[31],USR_INS_ID=p[32],DATA_INS=p[33],USR_MOD_ID=p[34],DATA_MOD=p[35],NOTE=p[36],DES_CERT_GENIT=p[37],DES_CERT_LOCAT=p[38],DES_CERT_VOCAT=p[39],DOTTORATO_FLG=p[40],POST_LAUREAM_FLG=p[41],VIS_TROVACV_FLG=p[42],SCUOLA_SPEC_FLG=p[43],MOBIL_FLG=p[44] ))
tab19 = sqlContext.createDataFrame(schema19)
tab19 = tab19.withColumn('DURATA_ANNI', tab19['DURATA_ANNI'].cast(IntegerType()))
tab19 = tab19.withColumn('VALORE_MIN', tab19['VALORE_MIN'].cast(IntegerType()))
tab19 = tab19.withColumn('RIF_FLG', tab19['RIF_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('LIVELLO', tab19['LIVELLO'].cast(IntegerType()))
tab19 = tab19.withColumn('SYS_FLG', tab19['SYS_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('GEN_IPO_FLG', tab19['GEN_IPO_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('ANS_FLG', tab19['ANS_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('DURATA_EFFETTIVA', tab19['DURATA_EFFETTIVA'].cast(IntegerType()))
tab19 = tab19.withColumn('NORM_ID', tab19['NORM_ID'].cast(IntegerType()))
tab19 = tab19.withColumn('DM270_MAX_ESA', tab19['DM270_MAX_ESA'].cast(IntegerType()))
tab19 = tab19.withColumn('DM270_MAXCFU_RIC', tab19['DM270_MAXCFU_RIC'].cast(IntegerType()))
tab19 = tab19.withColumn('MAX_POSTI_PART', tab19['MAX_POSTI_PART'].cast(IntegerType()))
tab19 = tab19.withColumn('REIMMATRICOLABILE_FLG', tab19['REIMMATRICOLABILE_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('MAX_PUNTI_FLG', tab19['MAX_PUNTI_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('COPIA_BORSA', tab19['COPIA_BORSA'].cast(IntegerType()))
tab19 = tab19.withColumn('COPIA_BORSA_ATTIVA', tab19['COPIA_BORSA_ATTIVA'].cast(IntegerType()))
tab19 = tab19.withColumn('COPIA_BORSA_MIN', tab19['COPIA_BORSA_MIN'].cast(IntegerType()))
tab19 = tab19.withColumn('CLASSE_FLG', tab19['CLASSE_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('DOTTORATO_FLG', tab19['DOTTORATO_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('POST_LAUREAM_FLG', tab19['POST_LAUREAM_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('VIS_TROVACV_FLG', tab19['VIS_TROVACV_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('SCUOLA_SPEC_FLG', tab19['SCUOLA_SPEC_FLG'].cast(IntegerType()))
tab19 = tab19.withColumn('MOBIL_FLG', tab19['MOBIL_FLG'].cast(IntegerType()))
#tab19 = tab19.withColumn('DATA_INS', tab19['DATA_INS'].cast(DateType()))
#tab19 = tab19.withColumn('DATA_MOD', tab19['DATA_MOD'].cast(DateType()))
tab19.registerTempTable("Q35_TIPI_CORSO_AD_VAL")


# IMPORT TABLE Q35_NORMATIVA_CDS_AD_VAL   ------ OK ------
file20 = sc.textFile('hdfs://master:9000/carlo.corona/P07_NORMATIVA.csv')
split20 = file20.map(lambda l: l.split(";"))
schema20 = split20.map(lambda p: Row(NORM_ID=p[0],NORM_COD=p[1],DES=p[2],NOTE=p[3],USR_INS_ID=p[4],DATA_INS=p[5],USR_MOD_ID=p[6],DATA_MOD=p[7] ))
tab20 = sqlContext.createDataFrame(schema20)
tab20 = tab20.withColumn('NORM_ID', tab20['NORM_ID'].cast(IntegerType()))
#tab20 = tab20.withColumn('DATA_INS', tab20['DATA_INS'].cast(DateType()))
#tab20 = tab20.withColumn('DATA_MOD', tab20['DATA_MOD'].cast(DateType()))
tab20.registerTempTable("Q35_NORMATIVA_CDS_AD_VAL")


# IMPORT TABLE Q35_INVIO_SEGNALAZIONE ------ OK -----
file21 = sc.textFile('hdfs://master:9000/carlo.corona/Q35_INVIO_SEGNALAZIONE.csv')
split21 = file21.map(lambda l: l.split(";"))
schema21 = split21.map(lambda p: Row(QUEST_COMP_ID=p[0],FLAG_SEGNALA_PRES_NUCLEO=p[1],FLAG_SEGNALA_PRES_FAC=p[2],FLAG_SEGNALA_COORD_CDS=p[3] ))
tab21 = sqlContext.createDataFrame(schema21)
tab21 = tab21.withColumn('QUEST_COMP_ID', tab21['QUEST_COMP_ID'].cast(IntegerType()))
tab21 = tab21.withColumn('FLAG_SEGNALA_PRES_NUCLEO', tab21['FLAG_SEGNALA_PRES_NUCLEO'].cast(IntegerType()))
tab21 = tab21.withColumn('FLAG_SEGNALA_PRES_FAC', tab21['FLAG_SEGNALA_PRES_FAC'].cast(IntegerType()))
tab21 = tab21.withColumn('FLAG_SEGNALA_COORD_CDS', tab21['FLAG_SEGNALA_COORD_CDS'].cast(IntegerType()))
tab21.registerTempTable("Q35_INVIO_SEGNALAZIONE")


# IMPORT TABLE Q35_NUM_QUEST_CDS_DOC_UD  ------- OK ---------
file22 = sc.textFile('hdfs://master:9000/carlo.corona/Q35_NUM_QUEST_CDS_DOC_UD.csv')
split22 = file22.map(lambda l: l.split(";"))
schema22 = split22.map(lambda p: Row(AA_OFF_AD_ID_VAL=p[0],AD_ID_VAL=p[1],AD_VAL_COD=p[2],AD_VAL_DENOMINZAIONE=p[3],CDS_AD_ID_VAL=p[4],CDS_AD_VAL_COD=p[5],CDS_AD_VAL_DENOMINAZIONE=p[6],CDS_AD_VAL_TIPO_CORSO=p[7],CDS_AD_VAL_TIPO_CORSO_DES=p[8],CDS_AD_VAL_DURATA_ANNI=p[9],CDS_AD_VAL_NORMATIVA=p[10],FAC_AD_VAL_COD=p[11],FAC_AD_VAL_DENOMINAZIONE=p[12],DOC_AD_ID_VAL=p[13],DOC_AD_VAL_NOMINATIVO=p[14],DOC_AD_VAL_MATRICOLA=p[15],DOC_AD_VAL_E_MAIL=p[16],EVENTO_COMP=p[17],STU_FREQ_FLG_COMP=p[18],STU_NO_AUT_FLG_COMP=p[19],UD_ID_VAL=p[20],UD_VAL_COD=p[21],UD_VAL_DENOMINAZIONE=p[22],NUM_QUEST_COMP=p[23]))
tab22 = sqlContext.createDataFrame(schema22)
tab22 = tab22.withColumn('AA_OFF_AD_ID_VAL', tab22['AA_OFF_AD_ID_VAL'].cast(IntegerType()))
tab22 = tab22.withColumn('AD_ID_VAL', tab22['AD_ID_VAL'].cast(IntegerType()))
tab22 = tab22.withColumn('CDS_AD_ID_VAL', tab22['CDS_AD_ID_VAL'].cast(IntegerType()))
tab22 = tab22.withColumn('CDS_AD_VAL_DURATA_ANNI', tab22['CDS_AD_VAL_DURATA_ANNI'].cast(IntegerType()))
tab22 = tab22.withColumn('DOC_AD_ID_VAL', tab22['DOC_AD_ID_VAL'].cast(IntegerType()))
tab22 = tab22.withColumn('STU_FREQ_FLG_COMP', tab22['STU_FREQ_FLG_COMP'].cast(IntegerType()))
tab22 = tab22.withColumn('STU_NO_AUT_FLG_COMP', tab22['STU_NO_AUT_FLG_COMP'].cast(IntegerType()))
tab22 = tab22.withColumn('UD_ID_VAL', tab22['UD_ID_VAL'].cast(IntegerType()))
tab22 = tab22.withColumn('NUM_QUEST_COMP', tab22['NUM_QUEST_COMP'].cast(IntegerType()))
tab22.registerTempTable("Q35_NUM_QUEST_CDS_DOC_UD")


# IMPORT TABLE Q35_CARICHE_FAC_AD_VAL  ------ OK -------
file23 = sc.textFile('hdfs://master:9000/carlo.corona/V06_CARICHE_SDR_VALIDE.csv')
split23 = file23.map(lambda l: l.split(";"))
schema23 = split23.map(lambda p: Row(SDR_ID=p[0],CARICA_ID=p[1],SDR_TIP=p[2],STRUTT_ID=p[3],COD=p[4],DES=p[5],DES_CARICA=p[6],DATA_INIZIO_VAL=p[7],DATA_FINE_VAL=p[8],TIPO_SOGG=p[9],APPELLATIVO=p[10],ID_AB=p[11],MATRICOLA_DOCENTE=p[12],CARICA_SDR_ID=p[13],CARICA_DES_LIN_ID=p[14],CARICA_SDR_RESP_ID=p[15]))
tab23 = sqlContext.createDataFrame(schema23)
tab23 = tab23.withColumn('SDR_ID', tab23['SDR_ID'].cast(IntegerType()))
tab23 = tab23.withColumn('CARICA_ID', tab23['CARICA_ID'].cast(IntegerType()))
tab23 = tab23.withColumn('STRUTT_ID', tab23['STRUTT_ID'].cast(IntegerType()))
tab23 = tab23.withColumn('ID_AB', tab23['ID_AB'].cast(IntegerType()))
tab23 = tab23.withColumn('CARICA_SDR_ID', tab23['CARICA_SDR_ID'].cast(IntegerType()))
tab23 = tab23.withColumn('CARICA_DES_LIN_ID', tab23['CARICA_DES_LIN_ID'].cast(IntegerType()))
tab23 = tab23.withColumn('CARICA_SDR_RESP_ID', tab23['CARICA_SDR_RESP_ID'].cast(IntegerType()))
#tab23 = tab23.withColumn('DATA_INIZIO_VAL', tab23['DATA_INIZIO_VAL'].cast(DateType()))
#tab23 = tab23.withColumn('DATA_FINE_VAL', tab23['DATA_FINE_VAL'].cast(DateType()))
tab23.registerTempTable("Q35_CARICHE_FAC_AD_VAL")


# IMPORT TABLE Q35_PRESIDE_FAC_AD_VAL  ------ OK ------
file24 = sc.textFile('hdfs://master:9000/carlo.corona/DOCENTI.csv')
split24 = file24.map(lambda l: l.split(";"))
schema24 = split24.map(lambda p: Row(DOCENTE_ID=p[0],SETT_COD=p[1],MATRICOLA=p[2],FAC_ID=p[3],DIP_ID=p[4],ORIG_DATO_COD=p[5],RUOLO_DOC_COD=p[6],APPELLATIVO=p[7],NOMINATIVO_ALT=p[8],DATA_INI_ATT=p[9],DATA_FIN_ATT=p[10],NAZI_NASC_ID=p[11],COM_NASC_ID=p[12],LOCALITA_NASC_ID=p[13],CITSTRA_NASC=p[14],USR_INS_ID=p[15],DATA_INS=p[16],USR_MOD_ID=p[17],DATA_MOD=p[18],FIRMA_ID=p[19],DATA_INI_RUOLO=p[20],ATENEO_ID=p[21],ID_AB=p[22],OPER_CELLULARE=p[23],CONS_SMS_FLG=p[24],PROFILO=p[25]))
tab24 = sqlContext.createDataFrame(schema24)
tab24 = tab24.withColumn('DOCENTE_ID', tab24['DOCENTE_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('FAC_ID', tab24['FAC_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('DIP_ID', tab24['DIP_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('NAZI_NASC_ID', tab24['NAZI_NASC_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('COM_NASC_ID', tab24['COM_NASC_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('LOCALITA_NASC_ID', tab24['LOCALITA_NASC_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('FIRMA_ID', tab24['FIRMA_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('ATENEO_ID', tab24['ATENEO_ID'].cast(IntegerType()))
tab24 = tab24.withColumn('ID_AB', tab24['ID_AB'].cast(IntegerType()))
tab24 = tab24.withColumn('OPER_CELLULARE', tab24['OPER_CELLULARE'].cast(IntegerType()))
tab24 = tab24.withColumn('CONS_SMS_FLG', tab24['CONS_SMS_FLG'].cast(IntegerType()))
#tab24 = tab24.withColumn('DATA_INS', tab24['DATA_INS'].cast(DateType()))
#tab24 = tab24.withColumn('DATA_MOD', tab24['DATA_MOD'].cast(DateType()))
#tab24 = tab24.withColumn('DATA_INI_ATT', tab24['DATA_INI_ATT'].cast(DateType()))
#tab24 = tab24.withColumn('DATA_FIN_ATT', tab24['DATA_FIN_ATT'].cast(DateType()))
#tab24 = tab24.withColumn('DATA_INI_RUOLO', tab24['DATA_INI_RUOLO'].cast(DateType()))
tab24.registerTempTable("Q35_PRESIDE_FAC_AD_VAL")


# IMPORT TABLE Q35_CARICHE_CDS_AD_VAL   -------- OK --------
file25 = sc.textFile('hdfs://master:9000/carlo.corona/V06_CARICHE_SDR_VALIDE.csv')
split25 = file25.map(lambda l: l.split(";"))
schema25 = split25.map(lambda p: Row(SDR_ID=p[0],CARICA_ID=p[1],SDR_TIP=p[2],STRUTT_ID=p[3],COD=p[4],DES=p[5],DES_CARICA=p[6],DATA_INIZIO_VAL=p[7],DATA_FINE_VAL=p[8],TIPO_SOGG=p[9],APPELLATIVO=p[10],ID_AB=p[11],MATRICOLA_DOCENTE=p[12],CARICA_SDR_ID=p[13],CARICA_DES_LIN_ID=p[14],CARICA_SDR_RESP_ID=p[15]))
tab25 = sqlContext.createDataFrame(schema25)
tab25 = tab25.withColumn('SDR_ID', tab25['SDR_ID'].cast(IntegerType()))
tab25 = tab25.withColumn('CARICA_ID', tab25['CARICA_ID'].cast(IntegerType()))
tab25 = tab25.withColumn('STRUTT_ID', tab25['STRUTT_ID'].cast(IntegerType()))
tab25 = tab25.withColumn('ID_AB', tab25['ID_AB'].cast(IntegerType()))
tab25 = tab25.withColumn('CARICA_SDR_ID', tab25['CARICA_SDR_ID'].cast(IntegerType()))
tab25 = tab25.withColumn('CARICA_DES_LIN_ID', tab25['CARICA_DES_LIN_ID'].cast(IntegerType()))
tab25 = tab25.withColumn('CARICA_SDR_RESP_ID', tab25['CARICA_SDR_RESP_ID'].cast(IntegerType()))
#tab25 = tab25.withColumn('DATA_INIZIO_VAL', tab25['DATA_INIZIO_VAL'].cast(DateType()))
#tab25 = tab25.withColumn('DATA_FINE_VAL', tab25['DATA_FINE_VAL'].cast(DateType()))
tab25.registerTempTable("Q35_CARICHE_CDS_AD_VAL")


# IMPORT TABLE Q35_PRESIDENTE_CDS_AD_VAL  ------ OK ------
file26 = sc.textFile('hdfs://master:9000/carlo.corona/DOCENTI.csv')
split26 = file26.map(lambda l: l.split(";"))
schema26 = split26.map(lambda p: Row(DOCENTE_ID=p[0],SETT_COD=p[1],MATRICOLA=p[2],FAC_ID=p[3],DIP_ID=p[4],ORIG_DATO_COD=p[5],RUOLO_DOC_COD=p[6],APPELLATIVO=p[7],NOMINATIVO_ALT=p[8],DATA_INI_ATT=p[9],DATA_FIN_ATT=p[10],NAZI_NASC_ID=p[11],COM_NASC_ID=p[12],LOCALITA_NASC_ID=p[13],CITSTRA_NASC=p[14],USR_INS_ID=p[15],DATA_INS=p[16],USR_MOD_ID=p[17],DATA_MOD=p[18],FIRMA_ID=p[19],DATA_INI_RUOLO=p[20],ATENEO_ID=p[21],ID_AB=p[22],OPER_CELLULARE=p[23],CONS_SMS_FLG=p[24],PROFILO=p[25]))
tab26 = sqlContext.createDataFrame(schema26)
tab26 = tab26.withColumn('DOCENTE_ID', tab26['DOCENTE_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('FAC_ID', tab26['FAC_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('DIP_ID', tab26['DIP_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('NAZI_NASC_ID', tab26['NAZI_NASC_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('COM_NASC_ID', tab26['COM_NASC_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('LOCALITA_NASC_ID', tab26['LOCALITA_NASC_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('FIRMA_ID', tab26['FIRMA_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('ATENEO_ID', tab26['ATENEO_ID'].cast(IntegerType()))
tab26 = tab26.withColumn('ID_AB', tab26['ID_AB'].cast(IntegerType()))
tab26 = tab26.withColumn('OPER_CELLULARE', tab26['OPER_CELLULARE'].cast(IntegerType()))
tab26 = tab26.withColumn('CONS_SMS_FLG', tab26['CONS_SMS_FLG'].cast(IntegerType()))
#tab26 = tab26.withColumn('DATA_INS', tab26['DATA_INS'].cast(DateType()))
#tab26 = tab26.withColumn('DATA_MOD', tab26['DATA_MOD'].cast(DateType()))
#tab26 = tab26.withColumn('DATA_INI_ATT', tab26['DATA_INI_ATT'].cast(DateType()))
#tab26 = tab26.withColumn('DATA_FIN_ATT', tab26['DATA_FIN_ATT'].cast(DateType()))
#tab26 = tab26.withColumn('DATA_INI_RUOLO', tab26['DATA_INI_RUOLO'].cast(DateType()))
tab26.registerTempTable("Q35_PRESIDENTE_CDS_AD_VAL")


# IMPORT TABLE Q35_DOC_AD_VAL_DIP_AFFERENZA   ------- OK --------
file27 = sc.textFile('hdfs://master:9000/carlo.corona/P06_DIP.csv')
split27 = file27.map(lambda l: l.split(";"))
schema27 = split27.map(lambda p: Row(DIP_ID=p[0],ISTAT_COD=p[1],COD=p[2],DES=p[3],ATENEO_ID=p[4],CITTA=p[5],VIA=p[6],PROV=p[7],CAP=p[8],CF=p[9],PRESDIR=p[10],FIRMA_CERT=p[11],AA_ATT_ID=p[12],AA_DIS_ID=p[13],SYS_FLG=p[14],URL_SITO_WEB=p[15],WEB_VIEW_FLG=p[16],COMUNE_ID=p[17],DES_CERT=p[18],COD_STAT_MIUR=p[19],ACRONIMO_FAC=p[20],CSA_COD=p[21],USR_INS_ID=p[22],DATA_INS=p[23],USR_MOD_ID=p[24],DATA_MOD=p[25],DEF_APPELLI_WEB=p[26],COD_FACOLTA=p[27],NOTE=p[28],DES_BREVE=p[29],SDR_TIP=p[30],TMP_ID=p[31]))
tab27 = sqlContext.createDataFrame(schema27)
tab27 = tab27.withColumn('DIP_ID', tab27['DIP_ID'].cast(IntegerType()))
tab27 = tab27.withColumn('ATENEO_ID', tab27['ATENEO_ID'].cast(IntegerType()))
tab27 = tab27.withColumn('AA_ATT_ID', tab27['AA_ATT_ID'].cast(IntegerType()))
tab27 = tab27.withColumn('AA_DIS_ID', tab27['AA_DIS_ID'].cast(IntegerType()))
tab27 = tab27.withColumn('SYS_FLG', tab27['SYS_FLG'].cast(IntegerType()))
tab27 = tab27.withColumn('WEB_VIEW_FLG', tab27['WEB_VIEW_FLG'].cast(IntegerType()))
tab27 = tab27.withColumn('COMUNE_ID', tab27['COMUNE_ID'].cast(IntegerType()))
tab27 = tab27.withColumn('DEF_APPELLI_WEB', tab27['DEF_APPELLI_WEB'].cast(IntegerType()))
#tab27 = tab27.withColumn('DATA_INS', tab27['DATA_INS'].cast(DateType()))
#tab27 = tab27.withColumn('DATA_MOD', tab27['DATA_MOD'].cast(DateType()))
tab27.registerTempTable("Q35_DOC_AD_VAL_DIP_AFFERENZA")


# IMPORT TABLE Q35_UD_TIPO_COPERTURA  ------- OK -------
file28 = sc.textFile('hdfs://master:9000/carlo.corona/P09_UD_PDSORD_DOC.csv')
split28 = file28.map(lambda l: l.split(";"))
schema28 = split28.map(lambda p: Row(CDS_ID=p[0],AA_OFF_ID=p[1],AD_ID=p[2],AA_ORD_ID=p[3],PDS_ID=p[4],UD_ID=p[5],DOCENTE_ID=p[6],TIPO_COPERTURA_COD=p[7],USR_INS_ID=p[8],DATA_INS=p[9],USR_MOD_ID=p[10],DATA_MOD=p[11],CUIN=p[12],NO_TRASP_FLG=p[13] ))
tab28 = sqlContext.createDataFrame(schema28)
tab28 = tab28.withColumn('CDS_ID', tab28['CDS_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('AA_OFF_ID', tab28['AA_OFF_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('AD_ID', tab28['AD_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('AA_ORD_ID', tab28['AA_ORD_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('PDS_ID', tab28['PDS_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('UD_ID', tab28['UD_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('DOCENTE_ID', tab28['DOCENTE_ID'].cast(IntegerType()))
tab28 = tab28.withColumn('NO_TRASP_FLG', tab28['NO_TRASP_FLG'].cast(IntegerType()))
#tab28 = tab28.withColumn('DATA_INS', tab28['DATA_INS'].cast(DateType()))
#tab28 = tab28.withColumn('DATA_MOD', tab28['DATA_MOD'].cast(DateType()))
tab28.registerTempTable("Q35_UD_TIPO_COPERTURA")


# IMPORT TABLE QUESITI_PADRE ----- OK -----
file29 = sc.textFile('hdfs://master:9000/carlo.corona/P02_QUESITI.csv')
split29 = file29.map(lambda l: l.split(";"))
schema29 = split29.map(lambda p: Row(QUESITO_ID=p[0],ORD_VIS=p[1],ELEM_COD=p[2],PARENT_QUESITO_ID=p[3],QUESTIONARIO_ID=p[4],TIPO_FORMATO_COD=p[5],PUNTEGGIO=p[6],OBBLIGATORIO_FLG=p[7],NOTE=p[8],GRP_ESC_ID=p[9],INS_ID=p[10],COND_ID=p[11],USR_INS_ID=p[12],DATA_INS=p[13],USR_MOD_ID=p[14],DATA_MOD=p[15],LIM_MIN=p[16],LIM_MAX=p[17],TAG_COD=p[18],FORMULA_RISP_ID=p[19],VISIBLE_FLG=p[20],CATEG_COD=p[21],PROC_ATTIVA_QUEST_ID=p[22],TIPO_LAYOUT_COD=p[23],NUM_MAX_SCE=p[24],ELEM_DES=p[25],NO_STAT_FLG=p[26],NUM_MAX_VALORI=p[27],OPERANDO_DOM_ID=p[28]))
tab29 = sqlContext.createDataFrame(schema29)
tab29 = tab29.withColumn('QUESITO_ID', tab29['QUESITO_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('ORD_VIS', tab29['ORD_VIS'].cast(IntegerType()))
tab29 = tab29.withColumn('PARENT_QUESITO_ID', tab29['PARENT_QUESITO_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('QUESTIONARIO_ID', tab29['QUESTIONARIO_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('OBBLIGATORIO_FLG', tab29['OBBLIGATORIO_FLG'].cast(IntegerType()))
tab29 = tab29.withColumn('GRP_ESC_ID', tab29['GRP_ESC_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('INS_ID', tab29['INS_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('COND_ID', tab29['COND_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('FORMULA_RISP_ID', tab29['FORMULA_RISP_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('VISIBLE_FLG', tab29['VISIBLE_FLG'].cast(IntegerType()))
tab29 = tab29.withColumn('PROC_ATTIVA_QUEST_ID', tab29['PROC_ATTIVA_QUEST_ID'].cast(IntegerType()))
tab29 = tab29.withColumn('NUM_MAX_SCE', tab29['NUM_MAX_SCE'].cast(IntegerType()))
tab29 = tab29.withColumn('NO_STAT_FLG', tab29['NO_STAT_FLG'].cast(IntegerType()))
tab29 = tab29.withColumn('NUM_MAX_VALORI', tab29['NUM_MAX_VALORI'].cast(IntegerType()))
tab29 = tab29.withColumn('OPERANDO_DOM_ID', tab29['OPERANDO_DOM_ID'].cast(IntegerType()))
#tab29 = tab29.withColumn('DATA_INS', tab29['DATA_INS'].cast(DateType()))
#tab29 = tab29.withColumn('DATA_MOD', tab29['DATA_MOD'].cast(DateType()))
tab29.registerTempTable("QUESITI_PADRE")


# IMPORT TABLE Q35_FAC_CDS_AD_VAL
file30 = sc.textFile('hdfs://master:9000/carlo.corona/P06_FAC_CDS.csv')
split30 = file30.map(lambda l: l.split(";"))
schema30 = split30.map(lambda p: Row(FAC_ID=p[0],CDS_ID=p[1],DEF_REG_CT_FLG=p[2],DEF_AMM_FLG=p[3],DEF_STAT_FLG=p[4],AA_INI_VAL=p[5],AA_FINE_VAL=p[6],NOTE=p[7],ANN_FLG=p[8],OLD_DEF_REG_CT_FLG=p[9],OLD_DEF_AMM_FLG=p[10],OLD_DEF_STAT_FLG=p[11],USR_INS_ID=p[12],DATA_INS=p[13],USR_MOD_ID=p[14],DATA_MOD=p[15]))
tab30 = sqlContext.createDataFrame(schema30)
tab30 = tab30.withColumn('FAC_ID', tab30['FAC_ID'].cast(IntegerType()))
tab30 = tab30.withColumn('CDS_ID', tab30['CDS_ID'].cast(IntegerType()))
tab30 = tab30.withColumn('DEF_REG_CT_FLG', tab30['DEF_REG_CT_FLG'].cast(IntegerType()))
tab30 = tab30.withColumn('DEF_AMM_FLG', tab30['DEF_AMM_FLG'].cast(IntegerType()))
tab30 = tab30.withColumn('DEF_STAT_FLG', tab30['DEF_STAT_FLG'].cast(IntegerType()))
tab30 = tab30.withColumn('AA_INI_VAL', tab30['AA_INI_VAL'].cast(IntegerType()))
tab30 = tab30.withColumn('AA_FINE_VAL', tab30['AA_FINE_VAL'].cast(IntegerType()))
tab30 = tab30.withColumn('ANN_FLG', tab30['ANN_FLG'].cast(IntegerType()))
tab30 = tab30.withColumn('OLD_DEF_REG_CT_FLG', tab30['OLD_DEF_REG_CT_FLG'].cast(IntegerType()))
tab30 = tab30.withColumn('OLD_DEF_AMM_FLG', tab30['OLD_DEF_AMM_FLG'].cast(IntegerType()))
tab30 = tab30.withColumn('OLD_DEF_STAT_FLG', tab30['OLD_DEF_STAT_FLG'].cast(IntegerType()))
#tab30 = tab30.withColumn('DATA_INS', tab30['DATA_INS'].cast(DateType()))
#tab30 = tab30.withColumn('DATA_MOD', tab30['DATA_MOD'].cast(DateType()))
tab30.registerTempTable("Q35_FAC_CDS_AD_VAL")


q1 = sqlContext.sql("SELECT COUNT(*) AS NUM_RECORD FROM P02_QUESITI LEFT OUTER JOIN P02_TIPI_FORMATO ON (P02_QUESITI.TIPO_FORMATO_COD = P02_TIPI_FORMATO.TIPO_FORMATO_COD) LEFT OUTER JOIN ELEMENTO_P02_QUESITI ON (P02_QUESITI.ELEM_COD = ELEMENTO_P02_QUESITI.ELEM_COD) LEFT OUTER JOIN P02_RISPOSTE ON (P02_QUESITI.QUESITO_ID = P02_RISPOSTE.QUESITO_ID) LEFT OUTER JOIN P02_QUEST_COMP_RISPOSTE ON (P02_RISPOSTE.QUEST_COMP_ID = P02_QUEST_COMP_RISPOSTE.QUEST_COMP_ID) LEFT OUTER JOIN QUESITI_PADRE ON (P02_QUESITI.PARENT_QUESITO_ID = QUESITI_PADRE.QUESITO_ID) LEFT OUTER JOIN ELEMENTO_QUESITI_PADRE ON (QUESITI_PADRE.ELEM_COD = ELEMENTO_QUESITI_PADRE.ELEM_COD) JOIN V02_RISPOSTE_ROW_TESTO_LIBERO ON (P02_RISPOSTE.RISPOSTA_ID = V02_RISPOSTE_ROW_TESTO_LIBERO.RISPOSTA_ID) LEFT OUTER JOIN Q35_DATI_COMP ON (P02_RISPOSTE.QUEST_COMP_ID = Q35_DATI_COMP.QUEST_COMP_ID) LEFT OUTER JOIN Q35_CDS_AD_VAL ON (Q35_DATI_COMP.CDS_AD_ID_VAL = Q35_CDS_AD_VAL.CDS_ID) JOIN Q35_FAC_CDS_AD_VAL ON ((Q35_CDS_AD_VAL.CDS_ID = Q35_FAC_CDS_AD_VAL.CDS_ID) AND Q35_FAC_CDS_AD_VAL.DEF_AMM_FLG=1) LEFT OUTER JOIN Q35_FAC_AD_VAL ON (Q35_FAC_CDS_AD_VAL.FAC_ID = Q35_FAC_AD_VAL.FAC_ID) LEFT OUTER JOIN Q35_DOCENTE_AD_VAL ON (Q35_DATI_COMP.DOC_AD_ID_VAL = Q35_DOCENTE_AD_VAL.DOCENTE_ID) LEFT OUTER JOIN Q35_DOCENTE_TIT_AD_VAL ON (Q35_DATI_COMP.DOC_TIT_AD_ID_VAL = Q35_DOCENTE_TIT_AD_VAL.DOCENTE_ID) LEFT OUTER JOIN Q35_FAC_COMP ON (Q35_DATI_COMP.FAC_ID_COMP = Q35_FAC_COMP.FAC_ID) LEFT OUTER JOIN Q35_CDS_COMP ON (Q35_DATI_COMP.CDS_ID_COMP = Q35_CDS_COMP.CDS_ID) LEFT OUTER JOIN Q35_P09_AD_GEN ON (Q35_DATI_COMP.AD_ID_VAL = Q35_P09_AD_GEN.AD_ID) LEFT OUTER JOIN Q35_P09_UD_CDS ON ((Q35_DATI_COMP.AA_OFF_AD_ID_VAL = Q35_P09_UD_CDS.AA_OFF_ID) AND (Q35_DATI_COMP.AD_ID_VAL = Q35_P09_UD_CDS.AD_ID) AND (Q35_DATI_COMP.CDS_AD_ID_VAL = Q35_P09_UD_CDS.CDS_ID) AND (Q35_DATI_COMP.UD_ID_VAL = Q35_P09_UD_CDS.UD_ID)) LEFT OUTER JOIN Q35_TIPI_TITOLO_SUP ON (Q35_DATI_COMP.TIPO_TITOLO_COD_COMP = Q35_TIPI_TITOLO_SUP.TIPO_TITOLO_COD) LEFT OUTER JOIN Q35_SCUOLA ON (Q35_DATI_COMP.SCUOLA_SUP_ID_COMP = Q35_SCUOLA.SCUOLA_SUP_ID) LEFT OUTER JOIN Q35_TIPI_CORSO_AD_VAL ON (Q35_CDS_AD_VAL.TIPO_CORSO_COD = Q35_TIPI_CORSO_AD_VAL.TIPO_CORSO_COD) LEFT OUTER JOIN Q35_NORMATIVA_CDS_AD_VAL ON (Q35_CDS_AD_VAL.NORM_ID = Q35_NORMATIVA_CDS_AD_VAL.NORM_ID) LEFT OUTER JOIN Q35_INVIO_SEGNALAZIONE ON (Q35_DATI_COMP.QUEST_COMP_ID = Q35_INVIO_SEGNALAZIONE.QUEST_COMP_ID) LEFT OUTER JOIN Q35_CARICHE_CDS_AD_VAL ON ((Q35_FAC_CDS_AD_VAL.CDS_ID = Q35_CARICHE_CDS_AD_VAL.STRUTT_ID) AND Q35_CARICHE_CDS_AD_VAL.SDR_TIP='CDS' AND Q35_CARICHE_CDS_AD_VAL.CARICA_ID=95) LEFT OUTER JOIN Q35_CARICHE_FAC_AD_VAL ON ((Q35_FAC_CDS_AD_VAL.FAC_ID = Q35_CARICHE_FAC_AD_VAL.STRUTT_ID) AND Q35_CARICHE_FAC_AD_VAL.SDR_TIP='FAC' AND Q35_CARICHE_FAC_AD_VAL.CARICA_ID=97) LEFT OUTER JOIN Q35_PRESIDE_FAC_AD_VAL ON (Q35_CARICHE_FAC_AD_VAL.MATRICOLA_DOCENTE = Q35_PRESIDE_FAC_AD_VAL.MATRICOLA) LEFT OUTER JOIN Q35_PRESIDENTE_CDS_AD_VAL ON (Q35_CARICHE_CDS_AD_VAL.MATRICOLA_DOCENTE = Q35_PRESIDENTE_CDS_AD_VAL.MATRICOLA) LEFT OUTER JOIN Q35_NUM_QUEST_CDS_DOC_UD ON ((Q35_DATI_COMP.AA_OFF_AD_ID_VAL = Q35_NUM_QUEST_CDS_DOC_UD.AA_OFF_AD_ID_VAL) AND (Q35_DATI_COMP.AD_ID_VAL = Q35_NUM_QUEST_CDS_DOC_UD.AD_ID_VAL) AND (Q35_DATI_COMP.CDS_AD_ID_VAL = Q35_NUM_QUEST_CDS_DOC_UD.CDS_AD_ID_VAL) AND (Q35_DATI_COMP.DOC_AD_ID_VAL = Q35_NUM_QUEST_CDS_DOC_UD.DOC_AD_ID_VAL) AND (Q35_DATI_COMP.UD_ID_VAL = Q35_NUM_QUEST_CDS_DOC_UD.UD_ID_VAL) AND  (NVL(Q35_DATI_COMP.EVENTO_COMP,'BOZZA')=Q35_NUM_QUEST_CDS_DOC_UD.EVENTO_COMP) AND  (NVL(Q35_DATI_COMP.STU_FREQ_FLG_COMP,999)=Q35_NUM_QUEST_CDS_DOC_UD.STU_FREQ_FLG_COMP) AND  (NVL(Q35_DATI_COMP.STU_NO_AUT_FLG_COMP,999)=Q35_NUM_QUEST_CDS_DOC_UD.STU_NO_AUT_FLG_COMP)) LEFT OUTER JOIN Q35_DOC_AD_VAL_DIP_AFFERENZA ON (Q35_DOC_AD_VAL_DIP_AFFERENZA.DIP_ID = Q35_DOCENTE_AD_VAL.DIP_ID) LEFT OUTER JOIN Q35_UD_TIPO_COPERTURA ON ((Q35_DATI_COMP.AA_OFF_AD_ID_VAL = Q35_UD_TIPO_COPERTURA.AA_OFF_ID) AND (Q35_DATI_COMP.AA_ORD_AD_ID_VAL = Q35_UD_TIPO_COPERTURA.AA_ORD_ID) AND (Q35_DATI_COMP.AD_ID_VAL = Q35_UD_TIPO_COPERTURA.AD_ID) AND (Q35_DATI_COMP.CDS_AD_ID_VAL = Q35_UD_TIPO_COPERTURA.CDS_ID) AND (Q35_DATI_COMP.DOC_AD_ID_VAL = Q35_UD_TIPO_COPERTURA.DOCENTE_ID) AND (Q35_DATI_COMP.PDS_AD_ID_VAL = Q35_UD_TIPO_COPERTURA.PDS_ID) AND (Q35_DATI_COMP.UD_ID_VAL = Q35_UD_TIPO_COPERTURA.UD_ID)) WHERE ((P02_QUESITI.QUESTIONARIO_ID = 35) AND ((Q35_DATI_COMP.AA_OFF_AD_ID_VAL = '2016') AND (Q35_DATI_COMP.DATAORA_COMP < CAST('2016-12-31 00:00:00' AS DATE))))")



q1.show()

print(time.time()-start)
